module.exports = {
	getConfigFields() {
		return [
			{
				type: 'static-text',
				id: 'info',
				width: 12,
				label: 'Information',
				value: 'This module controls Panasonic TH Series displays.',
			},
			{
				type: 'textinput',
				id: 'host',
				width: 12,
				label: 'TV/Display IP Address',
				default: '',
			},
			{
				type: 'dropdown',
				id: 'model',
				width: 4,
				label: 'Display Model',
				default: this.CHOICES_MODELS[0].id,
				choices: this.CHOICES_MODELS,
			},
			{
				type: 'static-text',
				id: 'model-info',
				width: 8,
				label: 'Model Info',
				value: 'Select the model of the display you are controlling. If your model is not listed, select "Other".',
			},
			{
				type: 'textinput',
				id: 'port',
				width: 4,
				label: 'Port',
				default: '10101',
			},
			{
				type: 'static-text',
				id: 'port-info',
				width: 8,
				label: 'Port Info',
				value: 'The default port is 10101, however some displays may use port 1024 or something else entirely.',
			},
			{
				type: 'dropdown',
				id: 'protocolVersion',
				width: 4,
				label: 'Protocol Version',
				default: 'old',
				choices: [
					{ id: 'old', label: 'Old' },
					{ id: 'new', label: 'New' },
				],
				isVisible: (config) => config.model === 'other',
			},
			{
				type: 'static-text',
				id: 'protocol-info',
				width: 8,
				label: 'Protocol Info',
				value: 'Select the protocol version of the display you are controlling. If you are unsure, select "Old".',
				isVisible: (config) => config.model === 'other',
			},
			{
				type: 'static-text',
				id: 'protocol-old-info',
				width: 12,
				label: 'Protocol Info',
				value: 'On older displays, make sure you are using "Protocol 1" in the Display Settings instead of "Protocol 2".',
			},
			{
				type: 'static-text',
				id: 'hr1',
				width: 12,
				label: ' ',
				value: '<hr />',
			},
			{
				type: 'checkbox',
				id: 'useAuthentication',
				width: 12,
				label: 'Use Authentication',
				default: false,
			},
			{
				type: 'textinput',
				id: 'user',
				label: 'Username',
				width: 4,
				default: 'dispadmin',
				isVisible: (config) => config.useAuthentication == true || config.useAuthentication == undefined,
			},
			{
				type: 'textinput',
				id: 'pass',
				label: 'Password',
				width: 4,
				default: '@Panasonic',
				isVisible: (config) => config.useAuthentication == true || config.useAuthentication == undefined,
			},
			{
				type: 'static-text',
				id: 'auth-info',
				width: 12,
				label: ' ',
				value:
					'Some displays may not work with this module properly if authentication is enabled. If you are having trouble, try disabling authentication or "protect mode" on the display.',
				isVisible: (config) => config.useAuthentication == true,
			},
			{
				type: 'static-text',
				id: 'hr2',
				width: 12,
				label: ' ',
				value: '<hr />',
			},
			{
				type: 'checkbox',
				id: 'enablePolling',
				label: 'Enable Polling',
				default: true,
				width: 4,
			},
			{
				type: 'textinput',
				id: 'pollTime',
				label: 'Polling Interval (milliseconds)',
				width: 8,
				default: 1000,
			},
			{
				type: 'static-text',
				id: 'hr3',
				width: 12,
				label: ' ',
				value: '<hr />',
			},
			{
				type: 'checkbox',
				id: 'verbose',
				label: 'Enable Verbose Logging',
				default: false,
			},
		]
	},
}
